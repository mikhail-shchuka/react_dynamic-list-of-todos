{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","React","memo","todos","onSetTodo","selectFilter","searchFilter","prepareTodos","useMemo","newTodos","filter","todo","completed","title","includes","className","map","id","type","onClick","TodoFilter","onSelectFilter","onSearchFilter","useState","setFilter","applyQuery","useCallback","debounce","value","onChange","event","target","placeholder","currentTarget","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","user","setUser","useEffect","userId","todoUser","href","email","name","App","setTodos","isLoad","setIsLoad","setTodo","setSelectFilter","setSearchFilter","allTodos","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3b644eb6.chunk.js","sourcesContent":["import React, { useMemo } from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  onSetTodo: React.Dispatch<React.SetStateAction<Todo | null>>;\n  selectFilter: string;\n  searchFilter: string;\n};\n\nexport const TodoList: React.FC<Props> = React.memo(({\n  todos,\n  onSetTodo,\n  selectFilter,\n  searchFilter,\n}) => {\n  const prepareTodos = useMemo(() => {\n    let newTodos = [...todos].filter(todo => {\n      switch (selectFilter) {\n        case 'completed':\n          return todo.completed;\n        case 'active':\n          return !todo.completed;\n        default:\n          return true;\n      }\n    });\n\n    if (searchFilter) {\n      newTodos = newTodos.filter(todo => (\n        todo.title.includes(searchFilter)\n      ));\n    }\n\n    return newTodos;\n  }, [searchFilter, selectFilter]);\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {prepareTodos.map(todo => (\n          <tr key={todo.id} data-cy=\"todo\" className=\"\">\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              {todo.completed ? (\n                <p className=\"has-text-success\">{todo.title}</p>\n              ) : (\n                <p className=\"has-text-danger\">{todo.title}</p>\n              )}\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => {\n                  onSetTodo(todo);\n                }}\n              >\n                <span className=\"icon\">\n                  <i className=\"far fa-eye\" />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n});\n","import React, { useCallback, useState } from 'react';\nimport debounce from 'lodash.debounce';\n\ntype Props = {\n  selectFilter: string;\n  searchFilter: string;\n  onSelectFilter: React.Dispatch<React.SetStateAction<string>>;\n  onSearchFilter: React.Dispatch<React.SetStateAction<string>>;\n};\n\nexport const TodoFilter: React.FC<Props> = React.memo(({\n  selectFilter,\n  searchFilter,\n  onSelectFilter,\n  onSearchFilter,\n}) => {\n  const [filter, setFilter] = useState(searchFilter);\n  const applyQuery = useCallback(debounce(onSearchFilter, 500), []);\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={selectFilter}\n            onChange={(event) => {\n              onSelectFilter(event.target.value);\n            }}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={filter}\n          onChange={(event) => {\n            setFilter(event.currentTarget.value);\n            applyQuery(event.currentTarget.value);\n          }}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {searchFilter && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => {\n                setFilter('');\n                applyQuery('');\n              }}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n});\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(1000)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  todo: Todo;\n  onSetTodo: React.Dispatch<React.SetStateAction<Todo | null>>;\n};\n\nexport const TodoModal: React.FC<Props> = ({ todo, onSetTodo }) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    getUser(todo.userId).then(todoUser => setUser(todoUser));\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              Todo #\n              {todo.id}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => {\n                onSetTodo(null);\n              }}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n              {' by '}\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { Todo } from './types/Todo';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [isLoad, setIsLoad] = useState(false);\n  const [todo, setTodo] = useState<Todo | null>(null);\n  const [selectFilter, setSelectFilter] = useState('all');\n  const [searchFilter, setSearchFilter] = useState('');\n\n  useEffect(() => {\n    getTodos().then(allTodos => {\n      setTodos(allTodos);\n      setIsLoad(true);\n    });\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                selectFilter={selectFilter}\n                onSelectFilter={setSelectFilter}\n                searchFilter={searchFilter}\n                onSearchFilter={setSearchFilter}\n              />\n            </div>\n\n            <div className=\"block\">\n              {!isLoad && <Loader />}\n              {todos.length > 0\n                && (\n                  <TodoList\n                    todos={todos}\n                    onSetTodo={setTodo}\n                    selectFilter={selectFilter}\n                    searchFilter={searchFilter}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {todo && <TodoModal todo={todo} onSetTodo={setTodo} />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}